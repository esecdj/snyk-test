name: Reusable Docker Snyk Action

on:
  workflow_call:
    inputs:
	  build-args:
		description: "List of build-time variables"
		required: false
	  context:
		description: "Build's context is the set of files located in the specified PATH or URL"
		required: false
	  file:
		description: "Path to the Dockerfile"
		required: false
	  platforms:
		description: "List of target platforms for build"
		required: false
	  push:
		description: "Push is a shorthand for --output=type=registry"
		required: false
		default: 'false'
	  tags:
		description: "List of tags"
		required: false
	  command:
		description: "Which Snyk command to run, defaults to test"
		default: test
	  branch:
		description: "Which branch is scanned"
		required: true		

	secrets:
      snyk_token:
        required: true
      DOCKER_USERNAME:
        required: true
      DOCKER_PASSWORD:
        required: true

jobs:
  docker-build-snyk:
    runs-on: ubuntu-latest
	
	steps:

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
		
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
		  
	  - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.context }}
		  platforms: ${{ inputs.platforms }}
		  file: ${{ inputs.file }}
          push: false
          tags: ${{ inputs.tags }}
          load: true 
		  build-args: ${{ inputs.build-args }}

      - name: Run Snyk Docker scan
        uses: snyk/actions/docker@master
		id: snyk_scan
		continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.snyk_token }}
        with:
          image: ${{ inputs.tags }}
          args: --severity-threshold=medium
		 
	  - name: Push Docker image 
        if: ${{ ${{ inputs.branch }} != 'main' || steps.snyk_scan.outcome == 'success' }}
        uses: docker/build-push-action@v6
        with:
          context: ${{ inputs.context }}
		  platforms: ${{ inputs.platforms }}
		  file: ${{ inputs.file }}
          push: ${{ inputs.push }}
          tags: ${{ inputs.tags }} 
		  build-args: ${{ inputs.build-args }}